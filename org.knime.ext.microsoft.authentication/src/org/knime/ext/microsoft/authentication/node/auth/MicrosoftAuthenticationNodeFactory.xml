<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./msauth.png" type="Source"
	xmlns="http://knime.org/node/v4.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
	<name>Microsoft Authentication</name>

	<shortDescription>
        Provides authentication to access Microsoft Azure and Office 365 cloud services.
    </shortDescription>

	<fullDescription>
		<intro>
			<p>
				This node provides authentication to access Microsoft Azure and Office 365 cloud services.
			</p>
			
			<p>
				It supports these authentication modes:
				<ul>
					<li>
						<i>Interactive authentication</i>: Performs an interactive, web browser based login by by clicking on <i>Login</i>
						in the node dialog. In the browser window that pops up, you may be asked to consent to the requested level of access
						The login results in a token being stored in a configurable location. The token will be valid for a certain amount of time
						that is defined by your Azure AD settings. 
					</li>
					<li>
						<i>Username/password authentication</i>: Performs a non-interactive login to obtain a fresh token every time the node executes.
						Since this login is non-interactive and you get a fresh token every time, this mode is well-suited for workflows on KNIME Server.
						However, it also has some limitations: First, you cannot to consent to the requested level of access, hence consent must be 
						given beforehand, e.g. during a previous interactive login, or by an Azure AD directory admin. Second, accounts that require
						multi-factor authentication (MFA) will not work.
					</li>
					<li>
						<i>Shared key authentication (Azure Storage only)</i>: <b>Specific to Azure Blob Storage and Azure Data Lake Storage Gen2</b>. Performs authentication using an Azure storage account
						and its secret key.
					</li>
					<li>
						<i>Shared access signature (SAS) authentication (Azure Storage only)</i>: <b>Specific to Azure Blob Storage and Azure Data Lake Storage Gen2</b>. Performs authentication using shared access signature (SAS).
						For more details on shared access signatures see the <a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview">Azure storage documentation.</a>
					</li>
				</ul>
			</p>
		</intro>
		
		<tab name="Interactive authentication">

			<option name="Login">
				Click <i>Login</i> to open a browser window, where you can login with your Microsoft identity and, if necessary, consent to the
				requested access level (see below). The login results in a <i>token</i> being stored in a configurable location (see below).
			</option>

			<option name="Token storage">
				Allows to define where the token obtained during login gets stored:
				<ul>
					<li>
						<b>Memory</b>: The token is temporarily stored in-memory. The token will be removed
						once the workflow is closed.
					</li>
					<li>
						<b>File</b>: Allows to specify a file where the token will be written to (in encrypted form) upon login, and read from
						when the node is executed. This allows the same token to be used by nodes in different workflows. Note that the file
						is (over)written every time you successfully login.
					</li>
					<li>
						<b>Node</b>: The token is persistently stored (in encrypted form) in the settings of this node and will be saved with
						the workflow.
					</li>
				</ul>
			</option>
			
			<option name="Clear selected">
				Clears the token from the currently selected storage. Please note that when <b>File</b> is selected as storage, then the
				specified file will be deleted.
			</option>

			<option name="Clear all">
				Clears the token from all selected storages. Please note that any file specified in the <b>File</b> storage option will be deleted.
			</option>

			<option name="Request access to">
				Allows to define which level of access to Microsoft Office 365 cloud
				services should be requested during login.
			</option>
		</tab>

		<tab name="Username/password authentication">

			<option name="Username">
				Provide the username of your Microsoft identity (typically an email address).
			</option>
			
			<option name="Password">
				Provide the password of your Microsoft identity. <i>Warning:</i> The password will be stored in weakly encrypted
				form as part of the node settings in the workflow.
			</option>
			
			<option name="Credentials flow variable">
				Allows to choose a credentials flow variable that provides the username and password to login with. 
			</option>

			<option name="Request access to">
				Allows to define which level of access to Microsoft Office 365 cloud
				services should be requested during login.
			</option>
		</tab>
		
		<tab name="Shared key authentication (Azure Storage only)">
			<option name="Account">
				Azure Storage account name.
			</option>
			<option name="Secret Key">
				The secret key. <i>Warning:</i> The secret key will be stored in weakly encrypted form as part of the node settings in the workflow.
			</option>
			<option name="Credentials flow variable">
				Allows to choose a credentials flow variable that provides the account and the secret key (as the username and password respectively) to login with. 
			</option>
		</tab>

		<tab name="Shared access signature (SAS) authentication (Azure Storage only)">
			<option name="Service SAS URL">
				URL that provides shared access signature (SAS) access to Azure Blob Storage or Azure Data Lake Storage Gen2. <i>Warning:</i> The secret key will be stored in weakly encrypted form as part of the node settings in the workflow.
				<p>
				Example URL:
				<tt>
					https://myaccount.blob.core.windows.net/?sv=2019-02-02&amp;st=...
				</tt>
				</p>
			</option>
			<option name="Credentials flow variable">
				Allows to choose a credentials flow variable that provides the storage service SAS URL as the password field. 
			</option>
		</tab>

	</fullDescription>

	<ports>
		<dynInPort insert-before="0" name="File System Connection" group-identifier="File System Connection"> 
			A file system connection to read/write the token, when using <b>File</b> as token storage.
		</dynInPort>
		<outPort index="0" name="Microsoft Office 365 Credential">
			A Microsoft Office 365 credential that uses the logged in Microsoft identity.
		</outPort>
	</ports>
</knimeNode>
