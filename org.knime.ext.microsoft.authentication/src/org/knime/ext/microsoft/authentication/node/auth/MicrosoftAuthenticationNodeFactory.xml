<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./msauth.png" type="Source"
	xmlns="http://knime.org/node/v4.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
	<name>Microsoft Authentication</name>

	<shortDescription>
        Provides authentication to access Microsoft Azure and Office 365 cloud services.
    </shortDescription>

	<fullDescription>
		<intro>
			<p>
				This node provides authentication to access Microsoft Azure and Office 365 cloud services.
			</p>
			
			<p>
				It supports these authentication modes:
				<ul>
					<li>
						<i>Interactive authentication</i>: Performs an interactive, web browser based login by by clicking on <i>Login</i>
						in the node dialog. In the browser window that pops up, you may be asked to consent to the requested level of access
						The login results in a token being stored in a configurable location. The token will be valid for a certain amount of time
						that is defined by your Azure AD settings. 
					</li>
					<li>
						<i>Username/password authentication</i>: Performs a non-interactive login to obtain a fresh token every time the node executes.
						Since this login is non-interactive and you get a fresh token every time, this mode is well-suited for workflows on KNIME Server.
						However, it also has some limitations: First, you cannot to consent to the requested level of access, hence consent must be 
						given beforehand, e.g. during a previous interactive login, or by an Azure AD directory admin. Second, accounts that require
						multi-factor authentication (MFA) will not work.
					</li>
					<li>
						<i>Shared key authentication (Azure Storage only)</i>: <b>Specific to Azure Blob Storage and Azure Data Lake Storage Gen2</b>. Performs authentication using an Azure storage account
						and its secret key.
					</li>
					<li>
						<i>Shared access signature (SAS) authentication (Azure Storage only)</i>: <b>Specific to Azure Blob Storage and Azure Data Lake Storage Gen2</b>. Performs authentication using shared access signature (SAS).
						For more details on shared access signatures see the <a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview">Azure storage documentation.</a>
					</li>
				</ul>
			</p>
		</intro>
		
		<tab name="Interactive authentication">

			<option name="Login">
				Click <i>Login</i> to open a browser window, where you can login with your Microsoft identity and, if necessary, consent to the
				requested access level (see below). The login results in a <i>token</i> being stored in a configurable location (see below).
			</option>

			<option name="Token storage">
				Allows to define where the token obtained during login gets stored:
				<ul>
					<li>
						<b>Memory</b>: The token is temporarily stored in-memory. The token will be removed
						once the workflow is closed.
					</li>
					<li>
						<b>File</b>: Allows to specify a file where the token will be written to (in encrypted form) upon login, and read from
						when the node is executed. This allows the same token to be used by nodes in different workflows. Note that the file
						is (over)written every time you successfully login.
					</li>
					<li>
						<b>Node</b>: The token is persistently stored (in encrypted form) in the settings of this node and will be saved with
						the workflow.
					</li>
				</ul>
			</option>
			
			<option name="Clear selected">
				Clears the token from the currently selected storage. Please note that when <b>File</b> is selected as storage, then the
				specified file will be deleted.
			</option>

			<option name="Clear all">
				Clears the token from all selected storages. Please note that any file specified in the <b>File</b> storage option will be deleted.
			</option>

			<option name="Request access to">
                <p>Allows to define which permissions should be requested for the token during login.</p> 

                <p><b>Technical note:</b> Selecting any option here will request certain <i>delegated</i> permissions (OAuth2 scopes) so that the
                Azure AD app registered by KNIME can perform API calls on behalf of the logged in user. The Azure AD App is called <i>KNIME Analytics Platform</i>
                and its Application ID is <i>cf47ff49-7da6-4603-b339-f4475176432b</i>.
                </p>

                <p>Each option corresponds to one or more permissions:</p>
                <ul>
                    <li><b>Sharepoint files (Read):</b>
                        Requests the <a href="https://docs.microsoft.com/en-us/graph/permissions-reference#sites-permissions">Sites.Read.All</a> permission.
                        This permission allows the token to be used for reading files stored on SharePoint Online. Note that access to any specific SharePoint site
                        needs to be additionally granted to the user by that site.
                    </li>
                </ul>
                <ul>
                    <li><b>Sharepoint files (Read/Write):</b>
                        Requests the <a href="https://docs.microsoft.com/en-us/graph/permissions-reference#sites-permissions">Sites.ReadWrite.All</a> permission.
                        This permission allows the token to read and write files stored on the SharePoint Online. Note that access to any specific SharePoint site
                        needs to be additionally granted to the user by that site.
                    </li>
                </ul>
                <ul>
                    <li><b>User Groups (Read)</b><i>(Requires admin consent):</i>
                        Requests the <a href="https://docs.microsoft.com/en-us/graph/permissions-reference#directory-permissions">Directory.Read.All</a> permission.
                        This permission is required to browse the Office 365 groups that the logged in user is a member of, when selecting a SharePoint team site to connect to.
                        Note that this permission can only be granted by a Azure AD admin.
                    </li>
                </ul>
                <ul>
                    <li><b>User Groups (Read)</b><i>(Limited):</i>
                        Requests the <a href="https://docs.microsoft.com/en-us/graph/permissions-reference#user-permissions">User.Read</a> permission.
                        This permission is required to browse the Office 365 groups that the logged in user is a member of, when selecting a SharePoint team site to connect to.
                        This permission does not require consent by an admin, but cannot access the human-readable names of Office 365 groups,
                        hence only technical IDs will be displayed.
                    </li>
                </ul>
                <ul>
                    <li><b>Azure Blob Storage/Azure Data Lake Storage Gen2:</b>
                        Requests the <a href="https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-azure-active-directory#use-oauth-access-tokens-for-authentication">user_impersonation</a> permission
                        for a specific Azure storage account. This permission allows the token to access data stored in that storage account. Note that access to any specific data in that account
                        needs to be additionally granted to the user, before any access is possible.
                    </li>
                </ul>
                <ul>
                    <li><b>Azure SQL Database:</b>
                        Requests the <a href="https://docs.microsoft.com/en-us/azure/azure-sql/database/active-directory-interactive-connect-azure-sql-db">user_impersonation</a> permission.
                        This permission allows the token to access the Azure SQL API. Note that access to any specific databases/resources needs to be additionally granted to the user,
                        before any actual access is possible.
                    </li>
                </ul>
                <ul>
                    <li><b>Power BI:</b>
                        Requests the <a href="https://docs.microsoft.com/en-us/power-bi/developer/embedded/register-app?tabs=customers%2CAzure">Dataset.ReadWrite.All and Workspace.Read.All</a> permissions.
                        This permission allows the token to access the Power BI API in order to list Power BI workspaces (required to get the identifier of the selected Power BI workspace), and read/write datasets.
                        Note that access to any specific Power BI resources needs to be additionally granted to the user, before any actual access is possible.
                    </li>
                </ul>
                <ul>
                    <li><b>Others (one per line):</b>
                        Requests the permissions entered by the user. You can use this option to enter any <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent">
                        OAuth2 scopes</a>, that are not already predefined above. An OAuth scope is specified as a URI, consisting of a resource identifier (Application ID URI) and a permission, for example
                        "https://outlook.office.com/mail.read". This can also be used to access non-Microsoft services such as Snowflake, which are
                        integrated with the Microsoft Identity platform. You can enter multiple scopes in the list separated by new line.
                    </li>
                </ul>               
			</option>
		</tab>

		<tab name="Username/password authentication">

			<option name="Username">
				Provide the username of your Microsoft identity (typically an email address).
			</option>
			
			<option name="Password">
				Provide the password of your Microsoft identity. <i>Warning:</i> The password will be stored in weakly encrypted
				form as part of the node settings in the workflow.
			</option>
			
			<option name="Credentials flow variable">
				Allows to choose a credentials flow variable that provides the username and password to login with. 
			</option>

			<option name="Request access to">
			     Allows to define which permissions (OAuth2 scopes) for Azure/Office 365 cloud services should be requested for the token during login.
			     See <i>Interactive Authentication</i> above for more information. 
			</option>
		</tab>
		
		<tab name="Shared key authentication (Azure Storage only)">
			<option name="Account">
				Azure Storage account name.
			</option>
			<option name="Secret Key">
				The secret key. <i>Warning:</i> The secret key will be stored in weakly encrypted form as part of the node settings in the workflow.
			</option>
			<option name="Credentials flow variable">
				Allows to choose a credentials flow variable that provides the account and the secret key (as the username and password respectively) to login with. 
			</option>
		</tab>

		<tab name="Shared access signature (SAS) authentication (Azure Storage only)">
			<option name="Service SAS URL">
				URL that provides shared access signature (SAS) access to Azure Blob Storage or Azure Data Lake Storage Gen2. <i>Warning:</i> The secret key will be stored in weakly encrypted form as part of the node settings in the workflow.
				<p>
				Example URL:
				<tt>
					https://myaccount.blob.core.windows.net/?sv=2019-02-02&amp;st=...
				</tt>
				</p>
			</option>
			<option name="Credentials flow variable">
				Allows to choose a credentials flow variable that provides the storage service SAS URL as the password field. 
			</option>
		</tab>

	</fullDescription>

	<ports>
		<dynInPort insert-before="0" name="File System Connection" group-identifier="File System Connection"> 
			A file system connection to read/write the token, when using <b>File</b> as token storage.
		</dynInPort>
		<outPort index="0" name="Microsoft Office 365 Credential">
			A Microsoft Office 365 credential that uses the logged in Microsoft identity.
		</outPort>
	</ports>
</knimeNode>
